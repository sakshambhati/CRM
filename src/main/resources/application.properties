#producer
spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.trusted.packages: com.crm.kafka

#consumer
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: crm
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.properties.spring.json.trusted.packages: com.crm.kafka


#Kafka in transaction
#spring.kafka.producer.transaction-id-prefix=CRM

#mongo_primary = mongodb://11.0.0.70:50000, 11.0.0.70:50001, 11.0.0.70:50002/Eoffice_PA?retryWrites=false
#mongo_secondary = mongodb://11.0.0.70:50000, 11.0.0.70:50001, 11.0.0.70:50002/Eoffice_PA_2?retryWrites=false

mongo_primary = mongodb://localhost:27017/Eoffice_PA?retryWrites=false
mongo_secondary = mongodb://localhost:27017/Eoffice_PA_2?retryWrites=false

#MongoDB Configuration Properties#
spring.data.mongodb.newdb1.uri=${mongo_primary}
spring.data.mongodb.newdb2.uri=${mongo_secondary}
#server.servlet.context-path=/crm/api


spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB


#for email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=costa.test@costacloud.com
spring.mail.password=ebzbzvplubzfwsmv
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.starttls.enable = true


#consul
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.enbled=true
spring.cloud.consul.config.enbled=false
spring.config.import=consul:localhost:8500
spring.cloud.consul.discovery.fail-fast=false
spring.cloud.consul.discovery.prefer-ip-address=true
